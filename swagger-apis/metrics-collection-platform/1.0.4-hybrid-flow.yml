openapi: 3.0.3
info:
  title: "Plataforma de Coleta de Métricas"
  description: |
    # Introdução

    A Plataforma de Coleta de Métricas foi idealizada com o objetivo de contabilizar as interações entre as instituições participantes, de modo a promover um ambiente equitativo e não discriminatório. Se trata de uma Plataforma localizada no perímetro central, gerida pelo regulador do ecossistema.

    ## Motivação

    Para que o ecossistema do Open Finance Brasil seja saudável para instituições e clientes finais, fez-se necessária a criação de uma Plataforma que deverá concentrar dados sobre as chamadas que as instituições fazem umas às outras. Dessa forma, torna-se possível coletar informações com o objetivo de se criar métricas e indicadores a fim de se ter visibilidade sobre todo o ambiente.

    No intuito de manter a integridade e consistência nos dados, o envio destes pelas instituições deverá passar por um processo de conciliação. Quando divergente, as instituições serão notificadas e terão a possibilidade de ajustar os reportes, o que promove um ambiente saudável de auto-regulação, prevenindo assim uma disputa.

    ## O que a Plataforma não é

    A Plataforma recebe os dados de maneira póstuma, ou seja, dentro do período de fechamento mas depois de a chamada concreta ter sido feita. Dada essa natureza, a Plataforma não pode atuar como um agente que proíbe, bloqueia ou interfere nas interações entre as instituiçoes.

    Por mais que concentre informações importantes das chamadas entre as instituições, a Plataforma não é uma ferramenta de BI, e o controle de acesso aos dados é feito em diferentes níveis (participante, regulador e administrador).

    ## Premissas Técnicas

    * Tanto o envio por parte dos participantes quanto o processamento por parte da Plataforma serão feitos de maneira assíncrona;

    ## Terminologia

    * **Server e Client**: em uma interação, a parte que solicita os dados é chamada de _client_, ao passo que a parte que devolve os dados é o _server_. O ponto de vista para o uso dessa terminologia é o tráfego dos dados da transação e não o ponto de partida da chamada. Portanto, supondo que A faça uma consulta em B pelos dados de uma conta, esses dados vão ser transmitidos por quem recebeu a solicitação, e recebidos por quem a fez, nesse caso, "A" é o Client e "B" é o Server.

    * **Reporte**: no contexto da API de Coleta de Métricas, um _reporte_ é o registro da chamada que será enviado tanto pelo server quanto pelo client. Esse registro será armazenado na Plataforma para posterior processo de conciliação de chamadas e extração de dados estatísticos.

    * **Divergência**: Quando Server e Client enviam reportes, cada um destes reportes se refere à uma chamada em específico. Nos casos em que uma das partes não envia o reporte sobre essa chamada em específico, é caracterizada uma divergência. As divergências podem ser resolvidas pela chamada às operações de modificação de reportes em suas respectivas APIs. Uma divergência é considerada fechada apenas quando todos os reportes encontram sua respectiva correspondência do outro lado da chamada.


    Para informações detalhadas sobre a PCM, consulte o [site da documentação da Plataforma](https://openfinancebrasil.atlassian.net/wiki/spaces/OF/pages/17378055/Plataforma+de+Coleta+de+M+tricas).

  version: 1.0.4

security:
  - PCMAccessToken: []

servers:
  - url: https://api.pcm.sandbox.openfinancebrasil.org.br
    description: UAT
  - url: https://api.pcm.openfinancebrasil.org.br
    description: Produção

tags:
  - name: Hybrid Flow API
    description: |
      Oferece operações que permitem a inclusão de reportes relativos a jornada de autorização de consentimento. Os reportes podem ser feitos até às 08h00 de D+1 da data da ocorrência e não precisam ser enviados em ordem.

      [ver diagrama de sequência](https://github.com/OpenBanking-Brasil/specs-pcm/blob/feature/PCM-122/openapi/hybrid-flow-diagram.svg?raw=true)

paths:
  "/report-api/v2/hybrid-flow/client/redirect-to-server":
    post:
      tags:
        - Hybrid Flow API
      summary: Inclusão de report Hybrid Flow de redirecionamento para o servidor (papel client)
      description: |
        Inclusão do report de início de redirecionamento de um usuário do receptor/iniciador para a transmissora/detentora. Ao enviar um report, a Plataforma vai fazer o processo de validação de maneira síncrona e devolver o resultado dessa validação na resposta. O status HTTP de retorno será 200 caso o report enviado seja aceito. Caso seja obtido um status HTTP diferente, a integração deve ser corrigida. Observe no response body o detalhamento do erro e corrija a implementação.
      operationId: add-reports-client-redirect-to-server
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/HybridFlowClientRedirectToServerReportRequest"
            examples:
              "Request Válido":
                description: O request apresentado tem todos os campos validados.

        required: true
      responses:
        "200":
          description: |
            O status 200 representa a situação onde  o registro enviado foi validado.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HybridFlowReportResponse"
              examples:
                Item processado:
                  description: Esta seria a resposta para uma solicitação com o exemplo "Request Válido" da documentação.
        "400":
          description: O formato do corpo da requisição não é um objeto válido.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericError"
              examples:
                "400":
                  value:
                    message: "Report Invalid"

        "401":
          $ref: "#/components/responses/Default401Unauthorized"
        "403":
          $ref: "#/components/responses/Default403Forbidden"
        "406":
          $ref: "#/components/responses/Default406NotAcceptable"
        "415":
          $ref: "#/components/responses/Default415UnsupportedMediaType"
        "429":
          $ref: "#/components/responses/Default429TooManyRequests"
        default:
          $ref: "#/components/responses/Default500InternalServerError"

  "/report-api/v2/hybrid-flow/server/redirect-target":
    post:
      tags:
        - Hybrid Flow API
      summary: Inclusão de report Hybrid Flow de redirecionamento para o destino (papel server)
      description: |
        Inclusão de report de chegada de usuário em sistema da transmissora/dentendora para autenticação. Deve ser enviado antes da autenticação do usuário. Ao enviar um report, a Plataforma vai fazer o processo de validação de maneira síncrona e devolver o resultado dessa validação na resposta. O status HTTP de retorno será 200 caso o reporte enviado seja aceito.

      operationId: add-reports-server-redirect-target
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/HybridFlowServerRedirectTargetReportRequest"
            examples:
              "Request Válido":
                description: O request apresentado tem todos os campos validados.
        required: true
      responses:
        "200":
          description: |
            O status 200 representa a situação onde  o registro enviado foi validado e será validado. Se o registro contiver problemas de validação.
            A operação vai devolver um objeto com resultado.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HybridFlowReportResponse"

        "400":
          description: O formato do corpo da requisição não é um objeto válido.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericError"
              examples:
                "400":
                  value:
                    message: "Report Invalid"

        "401":
          $ref: "#/components/responses/Default401Unauthorized"
        "403":
          $ref: "#/components/responses/Default403Forbidden"
        "406":
          $ref: "#/components/responses/Default406NotAcceptable"
        "415":
          $ref: "#/components/responses/Default415UnsupportedMediaType"
        "429":
          $ref: "#/components/responses/Default429TooManyRequests"
        default:
          $ref: "#/components/responses/Default500InternalServerError"

  "/report-api/v2/hybrid-flow/server/authenticated":
    post:
      tags:
        - Hybrid Flow API
      summary: Inclusão de report Hybrid Flow de autenticação (papel server)
      description: |
        Inclusão de report de autenticação na plataforma que deverá ser enviado após o client se autenticar / entrar no app e antes de autorizar o consentimento. Ao enviar um report, a Plataforma vai fazer o processo de validação de maneira síncrona e devolver o resultado dessa validação na resposta. O status HTTP de retorno será 200 caso o reporte enviado seja aceito.
      operationId: add-reports-server-authenticated
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/HybridFlowServerAuthenticatedRequest"
            examples:
              "Request Válido":
                description: O request apresentado tem todos os campos validados.

        required: true
      responses:
        "200":
          description: |
            O status 200 representa a situação onde  o registro enviado foi validado.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HybridFlowReportResponse"
              examples:
                Item processado:
                  description: Esta seria a resposta para uma solicitação com o exemplo "Request Válido" da documentação.
        "400":
          description: O formato do corpo da requisição não é um objeto válido.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericError"
              examples:
                "400":
                  value:
                    message: "Report Invalid"

        "401":
          $ref: "#/components/responses/Default401Unauthorized"
        "403":
          $ref: "#/components/responses/Default403Forbidden"
        "406":
          $ref: "#/components/responses/Default406NotAcceptable"
        "415":
          $ref: "#/components/responses/Default415UnsupportedMediaType"
        "429":
          $ref: "#/components/responses/Default429TooManyRequests"
        default:
          $ref: "#/components/responses/Default500InternalServerError"

  "/report-api/v2/hybrid-flow/server/redirect-to-client":
    post:
      tags:
        - Hybrid Flow API
      summary: Inclusão de report Hybrid Flow de redirecionamento para o cliente (papel server)
      description: |
        Inclusão de report de redirecionamento do usuário de volta para receptora/iniciadora. Ao enviar um report, a Plataforma vai fazer o processo de validação de maneira síncrona e devolver o resultado dessa validação na resposta. O status HTTP de retorno será 200 caso o reporte enviado seja aceito.
      operationId: add-reports-server-redirect-to-client
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/HybridFlowServerRedirectToClientRequest"

            examples:
              "Request Válido":
                description: O request apresentado tem todos os campos validados.

        required: true
      responses:
        "200":
          description: |
            O status 200 representa a situação onde  o registro enviado foi validado.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HybridFlowReportResponse"
              examples:
                Item processado:
                  description: Esta seria a resposta para uma solicitação com o exemplo "Request Válido" da documentação.
        "400":
          description: O formato do corpo da requisição não é um objeto válido.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericError"
              examples:
                "400":
                  value:
                    message: "Report Invalid"

        "401":
          $ref: "#/components/responses/Default401Unauthorized"
        "403":
          $ref: "#/components/responses/Default403Forbidden"
        "406":
          $ref: "#/components/responses/Default406NotAcceptable"
        "415":
          $ref: "#/components/responses/Default415UnsupportedMediaType"
        "429":
          $ref: "#/components/responses/Default429TooManyRequests"
        default:
          $ref: "#/components/responses/Default500InternalServerError"

  "/report-api/v2/hybrid-flow/client/redirect-target-with-errors":
    post:
      tags:
        - Hybrid Flow API
      summary: Inclusão de report Hybrid Flow de redirecionamento com erro para o destino (papel client)
      description: |
        Inclusão do report de retorno do usuário pelo Hybrid Flow contendo o código de erro. Ao enviar um report, a Plataforma vai fazer o processo de validação de maneira síncrona e devolver o resultado dessa validação na resposta. O status HTTP de retorno será 200 caso o reporte enviado seja aceito.
      operationId: add-reports-client-redirect-target-with-errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/HybridFlowServerRedirectTargetWithErrorsRequest"

            examples:
              "Request Válido":
                description: O request apresentado tem todos os campos validados.

        required: true
      responses:
        "200":
          description: |
            O status 200 representa a situação onde  o registro enviado foi validado.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HybridFlowReportResponse"
              examples:
                Item processado:
                  description: Esta seria a resposta para uma solicitação com o exemplo "Request Válido" da documentação.
        "400":
          description: O formato do corpo da requisição não é um objeto válido.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericError"
              examples:
                "400":
                  value:
                    message: "Report Invalid"

        "401":
          $ref: "#/components/responses/Default401Unauthorized"
        "403":
          $ref: "#/components/responses/Default403Forbidden"
        "406":
          $ref: "#/components/responses/Default406NotAcceptable"
        "415":
          $ref: "#/components/responses/Default415UnsupportedMediaType"
        "429":
          $ref: "#/components/responses/Default429TooManyRequests"
        default:
          $ref: "#/components/responses/Default500InternalServerError"

  "/report-api/v2/hybrid-flow/client/redirect-target-without-errors":
    post:
      tags:
        - Hybrid Flow API
      summary: Inclusão de report Hybrid Flow de redirecionamento sem erro para o destino (papel client)
      description: |
        Inclusão de report de retorno de usuário pelo Hybrid Flow com sucesso. Ao enviar um report, a Plataforma vai fazer o processo de validação de maneira síncrona e devolver o resultado dessa validação na resposta. O status HTTP de retorno será 200 caso o reporte enviado seja aceito.
      operationId: add-reports-client-redirect-target-without-errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/HybridFlowServerRedirectTargetWithoutErrorsRequest"

            examples:
              "Request Válido":
                description: O request apresentado tem todos os campos validados.

        required: true
      responses:
        "200":
          description: |
            O status 200 representa a situação onde  o registro enviado foi validado.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HybridFlowReportResponse"
              examples:
                Item processado:
                  description: Esta seria a resposta para uma solicitação com o exemplo "Request Válido" da documentação.
        "400":
          description: O formato do corpo da requisição não é um objeto válido.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericError"
              examples:
                "400":
                  value:
                    message: "Report Invalid"

        "401":
          $ref: "#/components/responses/Default401Unauthorized"
        "403":
          $ref: "#/components/responses/Default403Forbidden"
        "406":
          $ref: "#/components/responses/Default406NotAcceptable"
        "415":
          $ref: "#/components/responses/Default415UnsupportedMediaType"
        "429":
          $ref: "#/components/responses/Default429TooManyRequests"
        default:
          $ref: "#/components/responses/Default500InternalServerError"

components:
  schemas:
    Platform:
      type: string
      enum:
        - browser
        - app
      example: browser
    URI:
      type: string
      format: uri
      pattern: ^(https:\/\/)?(www\.)?[-a-zA-Z0-9@:%._\+~#=]{2,256}\.[a-z]{2,6}\b([-a-zA-Z0-9@:%_\+.~#?&\/\/=]*)$
      maxLength: 2000
      example: https://api.banco.com.br/open-banking/api/v1/resource
    Timestamp:
      description: Data/Hora UTC no formato ISO8601 com milissegundos (YYYY-MM-DDTHH:mm:ss.sssZ) do momento em que a chamada foi disparada, imediatamente antes do primeiro byte enviado na requisição.
      type: string
      format: date-time
      maxLength: 28
      example: "2021-11-11T18:08:08.278Z"
    ConsentId:
      type: string
      pattern: ^urn:[a-zA-Z0-9][a-zA-Z0-9-]{0,31}:[a-zA-Z0-9()+,\-.:=@;$_!*'%\/?#]+$
      maxLength: 256
      example: urn:bancoex:C1DD33123
      description: |

        O consentId é o identificador único do consentimento e deverá ser um URN - Uniform Resource Name.  
        Um URN, conforme definido na RFC8141 é um Uniform Resource Identifier - URI - que é atribuído sob o URI scheme "urn" e um namespace URN específico, com a intenção de que o URN seja um identificador de recurso persistente e independente da localização.  
        Considerando a string urn:bancoex:C1DD33123 como exemplo para consentId temos:

        * o namespace(urn)
        * o identificador associado ao namespace da instituição transnmissora (bancoex)
        * o identificador específico dentro do namespace (C1DD33123).
        Informações mais detalhadas sobre a construção de namespaces devem ser consultadas na RFC8141.

    OSType:
      type: string
      example: linux
      enum:
        - linux
        - macos
        - unix
        - windows
        - ios
        - android
        - other
    HybridFlowClientRedirectToServerReportRequest:
      description: ""
      type: object
      required:
        - "consentId"
        - "uriAuthorizationEndpoint"
        - "platform"
        - "osVersion"
        - "os"
        - "timestamp"
        - clientOrgId
      properties:
        consentId:
          $ref: "#/components/schemas/ConsentId"
        uriAuthorizationEndpoint:
          $ref: "#/components/schemas/URI"
        Platform:
          $ref: "#/components/schemas/Platform"
        osVersion:
          type: string
          example: "String obtida pelo user-agent/app utilizando a infraestrutura de consulta disponível em seu ambiente"
        os:
          $ref: "#/components/schemas/OSType"
        timestamp:
          $ref: "#/components/schemas/Timestamp"
        clientOrgId:
          description: A ser enviado vazio caso o report seja da mesma instituição que obteve o token para uso da PCM e, caso contrário, deve ser preenchido com o organasationId da instituição filha para o qual a instituição mãe está fazendo o report.
          type: string
          format: uuid
          maxLength: 36
          pattern: "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$"
          example: "56411f7e-d58b-44a8-8a2b-ff326d3f2955"

    HybridFlowServerRedirectTargetReportRequest:
      description: ""
      type: object
      required:
        - "consentId"
        - "uriAuthorizationEndpoint"
        - "osVersion"
        - "os"
        - "type"
        - "timestamp"
        - serverOrgId
      properties:
        consentId:
          $ref: "#/components/schemas/ConsentId"
        uriAuthorizationEndpoint:
          $ref: "#/components/schemas/URI"
        osVersion:
          type: string
          example: "String obtida pelo user-agent/app utilizando a infraestrutura de consulta disponível em seu ambiente"
        os:
          $ref: "#/components/schemas/OSType"
        type:
          type: string
          enum:
            - AWAITING_HANDOFF: "Deve ser utilizado quando é mostrado ao usuário a tela de HANDOFF."
            - AWAITING_USER_AUTH: "Deve ser reportado quando o sistema aguarda autenticação do usuário."
            - AWAITING_REDIRECT_TO_APP: "Deve ser reportado quando o sistema direciona o usuário direto para o APP."
        timestamp:
          $ref: "#/components/schemas/Timestamp"
        serverOrgId:
          description: A ser enviado vazio caso o report seja da mesma instituição que obteve o token para uso da PCM e, caso contrário, deve ser preenchido com o organasationId da instituição filha para o qual a instituição mãe está fazendo o report.
          type: string
          format: uuid
          maxLength: 36
          pattern: "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$"
          example: "c1ca8e62-9d6f-4ea3-84f2-d66bc0a8f7dc"

    HybridFlowServerAuthenticatedRequest:
      description: ""
      type: object
      required:
        - "consentId"
        - "Platform"
        - "osVersion"
        - "os"
        - timestamp
        - serverOrgId
      properties:
        consentId:
          $ref: "#/components/schemas/ConsentId"
        Platform:
          $ref: "#/components/schemas/Platform"
        osVersion:
          type: string
          example: "String obtida pelo user-agent/app utilizando a infraestrutura de consulta disponível em seu ambiente"
        os:
          $ref: "#/components/schemas/OSType"
        timestamp:
          $ref: "#/components/schemas/Timestamp"
        serverOrgId:
          description: A ser enviado vazio caso o report seja da mesma instituição que obteve o token para uso da PCM e, caso contrário, deve ser preenchido com o organasationId da instituição filha para o qual a instituição mãe está fazendo o report.
          type: string
          format: uuid
          maxLength: 36
          pattern: "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$"
          example: "c1ca8e62-9d6f-4ea3-84f2-d66bc0a8f7dc"
    HybridFlowServerRedirectToClientRequest:
      description: ""
      type: object
      required:
        - "consentId"
        - "uri_callback"
        - "Platform"
        - "osVersion"
        - "os"
        - "type"
        - "timestamp"
        - serverOrgId
      properties:
        consentId:
          $ref: "#/components/schemas/ConsentId"
        uri_callback:
          $ref: "#/components/schemas/URI"
        Platform:
          $ref: "#/components/schemas/Platform"
        osVersion:
          type: string
          example: "String obtida pelo user-agent/app utilizando a infraestrutura de consulta disponível em seu ambiente"
        os:
          $ref: "#/components/schemas/OSType"
        type:
          type: string
          enum:
            - AUTHORISED
            - REJECTED
        timestamp:
          $ref: "#/components/schemas/Timestamp"
        serverOrgId:
          description: A ser enviado vazio caso o report seja da mesma instituição que obteve o token para uso da PCM e, caso contrário, deve ser preenchido com o organasationId da instituição filha para o qual a instituição mãe está fazendo o report.
          type: string
          format: uuid
          maxLength: 36
          pattern: "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$"
          example: "c1ca8e62-9d6f-4ea3-84f2-d66bc0a8f7dc"

    HybridFlowServerRedirectTargetWithoutErrorsRequest:
      description: ""
      type: object
      required:
        - "consentId"
        - "Platform"
        - "osVersion"
        - "os"
        - timestamp
        - clientOrgId
      properties:
        consentId:
          $ref: "#/components/schemas/ConsentId"
        Platform:
          $ref: "#/components/schemas/Platform"
        osVersion:
          type: string
          example: "String obtida pelo user-agent/app utilizando a infraestrutura de consulta disponível em seu ambiente"
        os:
          $ref: "#/components/schemas/OSType"
        timestamp:
          $ref: "#/components/schemas/Timestamp"
        clientOrgId:
          description: A ser enviado vazio caso o report seja da mesma instituição que obteve o token para uso da PCM e, caso contrário, deve ser preenchido com o organasationId da instituição filha para o qual a instituição mãe está fazendo o report.
          type: string
          format: uuid
          maxLength: 36
          pattern: "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$"
          example: "56411f7e-d58b-44a8-8a2b-ff326d3f2955"

    HybridFlowServerRedirectTargetWithErrorsRequest:
      description: ""
      type: object
      required:
        - "consentId"
        - "Platform"
        - "osVersion"
        - "os"
        - "error"
        - "timestamp"
        - clientOrgId
      properties:
        consentId:
          $ref: "#/components/schemas/ConsentId"
        Platform:
          type: string
          enum:
            - browser
            - app
        osVersion:
          type: string
          example: "String obtida pelo user-agent/app utilizando a infraestrutura de consulta disponível em seu ambiente"
        os:
          $ref: "#/components/schemas/OSType"
        error:
          type: string
          example: "Código de erro retornado no payload do Hybrid Flow"
        timestamp:
          $ref: "#/components/schemas/Timestamp"
        clientOrgId:
          description: A ser enviado vazio caso o report seja da mesma instituição que obteve o token para uso da PCM e, caso contrário, deve ser preenchido com o organasationId da instituição filha para o qual a instituição mãe está fazendo o report.
          type: string
          format: uuid
          maxLength: 36
          pattern: "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$"
          example: "56411f7e-d58b-44a8-8a2b-ff326d3f2955"

    ClientReportRequest:
      description: Representa os dados que deverão ser enviados para a inclusão de reportes pelo lado do Client (iniciador da chamada). Informações adicionais sobre cada campo podem ser encontradas na documentação funcional em https://openfinancebrasil.atlassian.net/wiki/spaces/OF/pages/37879861/Reporte#Modelos-para-reportes-Private
      type: object
      required:
        - endpoint
        - statusCode
        - httpMethod
        - additionalInfo
        - timestamp
        - processTimespan
        - clientSSId
        - clientOrgId
        - serverOrgId
        - endpointUriPrefix
        - role
      properties:
        fapiInteractionId:
          description: UUID que identifica uma transação específica entre dois participantes. Esse dado pode ser encontrado no header x-fapi-interaction-id que é informado pelo Client e devolvido pelo Server. Mais informações em [Cabeçalhos HTTP](https://openbanking-brasil.github.io/areadesenvolvedor/#cabecalhos-http) na documentação do Open Finance Brasil. O envio dessa informação é obrigatório exceto nos casos ontem ela não esteja disponível, como por exemplo em respostas com status 5xx, ou em chamdas que terminaram por timeout onde o reporte tem que ser enviado mas sem esse atributo. Em todos os demais cenários, o envio é obrigatório.
          type: string
          format: uuid
          maxLength: 36
          pattern: "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$"
          example: "d78fc4e5-37ca-4da3-adf2-9b082bf92280"
        endpoint:
          $ref: "#/components/schemas/PrivateReportEndpoints"
        statusCode:
          description: Status de retorno HTTP da solicitação. No caso de ocorrer um timeout client side preencher com um código 403 (conforme documentação ).
          type: integer
          format: int32
          example: 200
          minimum: 200
          maximum: 599
        httpMethod:
          description: Método HTTP da solicitação.
          type: string
          enum: ["GET", "POST", "PUT", "DELETE", "PATCH"]
          example: GET
        correlationId:
          description: ID de correlação que identifica uma sequência de chamadas inter-relacionadas no ecossistema. Diferente do fapiInteractionId que serve para identificar cada par request-response (interação), o identificador de correlação serve para ligar diferentes reportes quando estes representam uma jornada ou uma sequência de chamadas. Este valor é de livre provimento pelo reportador.
          type: string
          pattern: ^[- /:_.',0-9a-zA-Z]{0,100}$
          maxLength: 100
          example: "uGQHwNupARo7I9E2PLJZph18a0M9y7DcUe7ITt3DqUOJd9NVjnskxf2"
        additionalInfo:
          description: Informações adicionais sobre o reporte deste endpoint/método. Possui característica variável. As regras de preenchimento estão na documentação funcional em https://openfinancebrasil.atlassian.net/wiki/spaces/OF/pages/37879861/Reporte#additionalInfo. Atenção especial na tabela Excel com a listagem de endpoints em https://openfinancebrasil.atlassian.net/wiki/download/attachments/37879861/Tabela%20additionalInfo%20%E2%80%93%20campos%20contexto%20e%20obrigatoriedade%20(cliente%20server).xlsx?api=v2.
          type: object
          properties:
            consentId:
              description: Deve ser preenchido com a mesma string obtida no campo `.data.consentId` retornado após a chamada inicial na API "POST /consent". *Ao reportar o uso de um endpoint /token, o identificador único de consentimento só será reportado nos casos em que "grant_type" é do tipo "authorization_code" ou do tipo "refresh_token", uma vez que esta informação de consentId é inexistente quando "grant_type" é do tipo
              type: string
            personType:
              description: Deve ser preenchida baseado no tipo de pessoa responsável pelo consentimento. Deverá ser obserdado se `.data.businessEntity` estiver preenchido no payload, se estiver então preencher com "PJ", se não estiver então preencher com "PF"
              type: string
            localInstrument:
              description: Deve ser preenchido com a mesma string informada no payload ".data.localInstrument"
              type: string
            status:
              description: Deve ser preenchido com a mesma string obtida no ".data.status"
              type: string
            clientIp:
              description: Deve ser preenchido com o Endereço IPv4 ou IPv6 do client que fez a requisição
              type: string
            rejectReason:
              description: Deve ser preenchido com a mesma string obtida no ".data.rejectionReason.code"
              type: string
            errorCodes:
              description: Caso o HTTP Code seja 4XX ou 5XX, esse campo deve ser preenchido com a lista das strings obtidas em ".errors[].code" . Não havendo string, deve ser enviada uma lista vazia.
              type: string
            webhookEnable:
              description: Deve ser preenchido com o valor booleano TRUE caso haja pelo menos um item indicado na lista do campo ".webhook_uris" no payload, caso contrário deverá ser preenchido com o valor booleano FALSE
              type: string
            webhookInteractionId:
              description: Caso o GET esteja sendo feito após o estímulo do webhook, o x-webhook-interaction-id deverá ser indicado
              type: string
            enrollmentId:
              description: Deve ser preenchido com a mesma string obtida no campo `.data.enrollmentId` retornado após a chamada inicial na API "POST /enrollments". *Ao reportar o uso de um endpoint /token, o identificador único de consentimento só será reportado nos casos em que "grant_type" é do tipo "authorization_code" ou do tipo "refresh_token", uma vez que esta informação de enrollmentId é inexistente quando "grant_type" é do tipo "client_credentials".
              type: string
            authenticatorAttachment:
              description: Deve ser preenchido com a mesma string definida em ".data.authenticatorAttachment".  Não havendo string, deve ser explicitamente enviada esse additionalInfo como sendo uma string vazia.
              type: string
            platform:
              description: Deve ser preenchido com a mesma string definida em ".data.platform"
              type: string
            rp:
              description: Deve ser preenchido com a mesma string definida em ".data.rp"
              type: string
            rejectionReasonCode:
              description: Deve ser preenchido com a mesma string obtida no ".data.rejectionReason.code"
              type: string
            rejectionReasonDetail:
              description: Deve ser preenchido com a mesma string obtida no ".data.rejectionReason.detail"
              type: string
            authorisationFlow:
              description: Deve ser preenchido com a mesma string obtida no ".data.authorisationFlow"
              type: string
            paymentType:
              description: |
                Identifica o modo de pagamento acionado no consentimento
                1. Envio obrigatório para a role Client​
                2. Conteudo ENUM do novo campo varia de acordo com o endpoint conforme tabela abaixo

                | Endpoint | Valores possíveis |
                |----------|-------------|
                | <br>POST /open-banking/payments/v4/consents&nbsp;&nbsp;&nbsp;    |  <br>IMEDIATO<br>AGENDADO<br>RECORRENTE​
                |----------|-------------|
                | <br>POST /open-banking/payments/v4/pix/payments&nbsp;&nbsp;&nbsp;    |  <br>IMEDIATO<br>AGENDADO<br>RECORRENTE​
                |----------|-------------|
                | <br>PATCH /open-banking/payments/v4/pix/payments/{paymentId}​&nbsp;&nbsp;&nbsp;    |  <br>IMEDIATO<br>AGENDADO<br>RECORRENTE​
                |----------|-------------|
                | <br>POST /automatic-payments/v1/recurring-consents&nbsp;&nbsp;&nbsp;    |  <br>SWEEPING
                |----------|-------------|
                | <br>PATCH /automatic-payments/v1/recurring-consents/{consentId}&nbsp;&nbsp;&nbsp;    |  <br>SWEEPING
                |----------|-------------|
                | <br>POST /automatic-payments/v1/pix/recurring-payments&nbsp;&nbsp;&nbsp;    |  <br>SWEEPING
                |----------|-------------|
                | <br>PATCH /automatic-payments/v1/pix/recurring-payments/{paymentId}&nbsp;&nbsp;&nbsp;   |  <br>SWEEPING
                <br>
              type: string
              enum:
                - IMEDIATO: Pix sem configuração de agendamento​
                - AGENDADO: Pix com configuração de agendamento​
                - RECORRENTE: Pix sem configuração de agendamento e configuração de recorrência​
                - SWEEPING: para todas as chamadas de pagamentos inteligentes​

        timestamp:
          description: Data/Hora UTC no formato ISO8601 com milissegundos (YYYY-MM-DDTHH:mm:ss.sssZ) do momento em que a chamada foi disparada, imediatamente antes do primeiro byte enviado na requisição.
          type: string
          format: date-time
          maxLength: 28
          example: "2021-11-11T18:08:08.278Z"
        processTimespan:
          description: Tempo em milissegundos inteiros decorrido desde o registro do timestamp até a chegada do primeiro byte da resposta do server.
          type: integer
          format: int16
          example: 120
        clientSSId:
          description: Identificador do software statement de onde a chamada foi disparada. A PCM garante que foi esta orgId que obteve o token de acesso utilizado neste reporte.
          type: string
          format: uuid
          maxLength: 36
          pattern: "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$"
          example: "84570da9-567b-4201-9b77-c715bc5bffde"
        clientOrgId:
          description: Identificador da organização **de onde** a chamada foi disparada
          type: string
          format: uuid
          maxLength: 36
          pattern: "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$"
          example: "56411f7e-d58b-44a8-8a2b-ff326d3f2955"
        serverOrgId:
          description: Identificador da organização **para onde** a chamada foi feita
          type: string
          format: uuid
          maxLength: 36
          pattern: "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$"
          example: "c1ca8e62-9d6f-4ea3-84f2-d66bc0a8f7dc"
        endpointUriPrefix:
          description: |
            Endereço do servidor de destino da chamada incluindo o prefixo quando houver. O formato do campo deverá ser o seguinte: `https://{host}/{prefixo}`, sendo:

            * `host`: endereço FQDN do servidor de destino
            * `prefixo`: toda a parte do path que vem antes da string `/open-banking`

            Exemplos:

            1. Para uma requisição em `https://openbanking.instituicao-1.com.br/opbk/open-banking/products-services/v1/business-accounts`, o dado a ser enviado é `https://openbanking.instituicao-1.com.br/opbk`.
            1. Para uma requisição em `https://openbanking.instituicao-2.com.br/open-banking/products-services/v1/business-accounts`, o dado a ser enviado é `https://openbanking.instituicao-1.com.br/`.

            Nos reportes relativos aos endpoints /token e /register este campo deverá conter a URL inteira do request. 

            Exemplos: `https://oauth2.cartaodummy.opf.instituicao/as/token.oauth2` `https://instituicao.com.br/orgs/instituicao/reg`
          type: string
          pattern: ^[- /:_.',0-9a-zA-Z]{0,200}$
          maxLength: 200
          example: https://openbanking.instituicao-1.com.br/opbk
        role:
          description: ENUM indicando se o reporte que está sendo enviado apresenta a visão do server ou do client. Obrigatório valor "CLIENT"
          type: string
          enum:
            - CLIENT
            - SERVER

    ServerReportRequest:
      description: Representa os dados que deverão ser enviados para a inclusão de reportes pelo lado do Server (receptor da chamada). Informações adicionais sobre cada campo podem ser encontradas na documentação funcional em https://openfinancebrasil.atlassian.net/wiki/spaces/OF/pages/37879861/Reporte#Modelos-para-reportes-Private
      type: object
      required:
        - fapiInteractionId
        - endpoint
        - statusCode
        - httpMethod
        - timestamp
        - processTimespan
        - clientOrgId
        - serverOrgId
        - role
      properties:
        fapiInteractionId:
          description: UUID que identifica uma transação específica entre dois participantes. Esse dado pode ser encontrado no header x-fapi-interaction-id que é informado pelo Client e devolvido pelo Server. Mais informações em [Cabeçalhos HTTP](https://openbanking-brasil.github.io/areadesenvolvedor/#cabecalhos-http) na documentação do Open Finance Brasil.
          type: string
          format: uuid
          maxLength: 36
          pattern: "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$"
          example: "d78fc4e5-37ca-4da3-adf2-9b082bf92280"
        endpoint:
          $ref: "#/components/schemas/PrivateReportEndpoints"
        statusCode:
          description: Status de retorno HTTP da solicitação. No caso de ocorrer um timeout client side preencher com um código 408 [conforme documentação](https://openfinancebrasil.atlassian.net/wiki/spaces/OF/pages/37879861/Reporte)
          type: integer
          format: int32
          example: 200
          minimum: 200
          maximum: 599
        httpMethod:
          description: Método HTTP da solicitação.
          type: string
          enum: ["GET", "POST", "PUT", "DELETE", "PATCH"]
          example: GET
        correlationId:
          description: Não utilizado pelo server.
          type: string
          pattern: ^[- /:_.',0-9a-zA-Z]{0,100}$
          maxLength: 100
          example: "uGQHwNupARo7I9E2PLJZph18a0M9y7DcUe7ITt3DqUOJd9NVjnskxf2"
        timestamp:
          description: Data/Hora UTC no formato ISO8601 com milissegundos (YYYY-MM-DDTHH:mm:ss.sssZ) do momento em que a chamada foi recebida, imediatamente antes do primeiro byte enviado na requisição.
          type: string
          format: date-time
          maxLength: 28
          example: "2021-11-11T18:08:08.152Z"
        processTimespan:
          description: Tempo em milissegundos inteiros decorrido desde o registro do timestamp até a finalização do envio dos dados.
          type: integer
          format: int16
          example: 120
        clientOrgId:
          description: Identificador da organização **de onde** a chamada foi disparada
          type: string
          format: uuid
          maxLength: 36
          pattern: "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$"
          example: "56411f7e-d58b-44a8-8a2b-ff326d3f2955"
        serverOrgId:
          description: Identificador da organização **para onde** a chamada foi feita. A PCM garante que foi esta orgId que obteve o token de acesso utilizado neste reporte.
          type: string
          format: uuid
          maxLength: 36
          pattern: "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$"
          example: "c1ca8e62-9d6f-4ea3-84f2-d66bc0a8f7dc"
        additionalInfo:
          description: Informações adicionais sobre o reporte deste endpoint/método. Possui característica variável. As regras de preenchimento estão na documentação funcional em [openfinancebrasil](https://openfinancebrasil.atlassian.net/wiki/spaces/OF/pages/37879861/Reporte#additionalInfo). Atenção especial na tabela Excel com a listagem de endpoints em [tabela additional info](https://openfinancebrasil.atlassian.net/wiki/download/attachments/37879861/Tabela%20additionalInfo%20%E2%80%93%20campos%20contexto%20e%20obrigatoriedade_v17__Abr.xlsx?api=v2)
          type: object
          properties:
            dropReason:
              description: |
                1. O campo dropReason deve ser adicionado nas informações do campo additionalInfo que deverá ser enviado no reporte do provedor do serviço consumido (papel SERVER)
                2. O campo deve ser preenchido como “NO_CREDENTIAL" caso o CPF/CNPJ não seja cliente ou “NONE” caso contrário.
                3. Neste contexto define-se como cliente o CPF/CNPJ que possui credencial autenticadora para prosseguir no fluxo monitorado.
                4. O reporte deverá ser feito por todos os transmissores de dados e detentoras de conta.
                5. Para o caso em que o operador não possui poder, após autenticação dele e desambiguação de quem está operando, o reporte deve ser realizado com "NO_CREDENTIAL".
              type: string
        role:
          description: ENUM indicando se o reporte que está sendo enviado apresenta a visão do server ou do client. Obrigatório valor "SERVER"
          type: string
          enum:
            - CLIENT
            - SERVER

    OpendataReportRequest:
      description: Modelo que representa os dados a serem enviados às APIs de dados abertos. Informações adicionais sobre cada campo podem ser encontradas na documentação funcional em https://openfinancebrasil.atlassian.net/wiki/spaces/OF/pages/37879861/Reporte#Reportes-OpenData.
      additionalProperties: false
      type: object
      required:
        - endpoint
        - statusCode
        - httpMethod
        - timestamp
        - processTimespan
        - additionalInfo
      properties:
        endpoint:
          $ref: "#/components/schemas/OpendataReportEndpoints"
        statusCode:
          description: Status de retorno HTTP da solicitação.
          type: integer
          format: int32
          example: 200
          minimum: 200
          maximum: 599
        httpMethod:
          description: Método HTTP da solicitação.
          type: string
          enum: ["GET"]
          example: GET
        timestamp:
          description: Data/Hora UTC no formato ISO8601 com milissegundos (YYYY-MM-DDTHH:mm:ss.sssZ) do momento em que a chamada foi recebida.
          type: string
          format: date-time
          maxLength: 28
          example: "2021-11-11T18:08:08.421Z"
        processTimespan:
          description: Tempo em milissegundos inteiros decorrido desde o recebimento do request até o momento imediatamente anterior ao envio do primeiro byte da resposta.
          type: integer
          format: int16
          example: 120
        additionalInfo:
          $ref: "#/components/schemas/OpendataAdditionalInfo"

    ReportResponse:
      description: Representa os dados que serão retornados pelas operações de inclusão de reportes.
      additionalProperties: false
      required:
        - reportId
        - status
      type: object
      properties:
        reportId:
          description: Identificator único interno do reporte no formato UUID v4.
          type: string
          format: uuid
          maxLength: 36
          pattern: "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$"
          example: "9a97c2df-b261-4fc2-aa66-d1b5168397da"
        status:
          $ref: "#/components/schemas/ReportStatus"
        correlationId:
          description: Retorna o valor do atributo `correlationId` informado na solicitação de inclusão de reporte sem alteração.
          type: string
          pattern: ^[- /:_.',0-9a-zA-Z]{0,100}$
          maxLength: 100
          example: "uGQHwNupARo7I9E2PLJZph18a0M9y7DcUe7ITt3DqUOJd9NVjnskxf2"
        message:
          description: Caso a solicitação contenha algum problema em seu formato, ou caso haja algum tipo de falha detectável no momento da requisição, esse campo trará detalhes sobre o erro ocorrido. Informações adicionais sobre os tipos de erros podem ser encontradas em https://openfinancebrasil.atlassian.net/wiki/spaces/OF/pages/46170119/Troubleshooting+-+PCM
          type: string
          pattern: ^[- /:_.',0-9a-zA-Z]{0,200}$
          maxLength: 200
          example: "Missing fields: 'fapiInteractionId', 'endpoint'"

    HybridFlowReportResponse:
      description: Representa os dados que serão retornados pelas operações de inclusão de reportes.
      additionalProperties: false
      required:
        - reportId
      type: object
      properties:
        reportId:
          description: Identificator único interno do reporte no formato UUID v4.
          type: string
          format: uuid
          maxLength: 36
          pattern: "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$"
          example: "9a97c2df-b261-4fc2-aa66-d1b5168397da"

    ReportStatus:
      description: |
        Informa o status do registro de reporte.
        * **DISCARDED**: O status `DISCARDED` indica que o reporte que foi enviado pelo participante foi rejeitado pela PCM. O motivo do descarte será enviado junto com a resposta, podendo ser por conta de um reporte inválido ou por um erro no processamento. Não é possível modificar um reporte `DISCARDED`, portanto o reportador deverá corrigir o registro que apresentou erro e reenviar via POST.
        * **SINGLE**: O status `SINGLE` indica que o reporte em questão não tem uma contraparte. Ele é utilizado em casos onde a conciliação entre dois reportes não é possível.
        * **ACCEPTED**: O status `ACCEPTED` indica que a validação de formato do reporte não tem erros e este será enviado para processamento.
        * **UNPAIRED**: O status `UNPAIRED` significa que o reporte atual não possui uma correspondência em outro reporte através do atributo `fapiInteractionId`. Indica um reporte _divergente_.
        * **PAIRED_INCONSISTENT**: O status `PAIRED_INCONSISTENT` significa que o reporte corrente possui uma contraparte com o mesmo `fapiInteractionId`, mas os demais dados estão inconsistentes. Indica um reporte _divergente_.
        * **PAIRED**: Indica que o reporte tem uma contraparte com o mesmo `fapiInteractionId` e os demais dados estão conciliados. Representa o estado final desejado em um fluxo correto.
      type: string
      enum:
        - DISCARDED
        - SINGLE
        - ACCEPTED
        - UNPAIRED
        - PAIRED_INCONSISTENT
        - PAIRED

    ReportModel:
      description: Representa um reporte devidamente persistido.
      allOf:
        - $ref: "#/components/schemas/ClientReportRequest"
        - type: object
          properties:
            reportId:
              description: |
                Identificador único do registro criado na Plataforma de Coleta de Métricas.
              type: string
              format: uuid
              maxLength: 36
              pattern: "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$"
            pairedReportId:
              description: |
                Esse atributo indica o `reportId` do registro que forma uma correlação com o presente registro. Se essa informação existir, o status do registro atual deverá ser _PAIRED_
              type: string
              format: uuid
              maxLength: 36
              pattern: "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$"
            status:
              $ref: "#/components/schemas/ReportStatus"
            createdAt:
              description: |
                Carimbo do tempo do momento da criação do registro
              type: string
              format: date-time
              maxLength: 28
            updatedAt:
              description: |
                Carimbo do tempo do momento da última atualização do registro
              type: string
              format: date-time
              maxLength: 28

    OpendataReportModel:
      description: Representa um reporte devidamente persistido.
      allOf:
        - $ref: "#/components/schemas/OpendataReportRequest"
        - type: object
          properties:
            reportId:
              description: |
                Identificador único do registro criado na Plataforma de Coleta de Métricas.
              type: string
              format: uuid
              maxLength: 36
              pattern: "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$"
            createdAt:
              description: |
                Carimbo do tempo do momento da criação do registro
              type: string
              format: date-time
              maxLength: 28
            updatedAt:
              description: |
                Carimbo do tempo do momento da última atualização do registro
              type: string
              format: date-time
              maxLength: 28

    PrivateReportEndpoints:
      description: |
        Identificação do endpoint que foi utilizado na transação reportada. A identificação do endpoint deve estar entre as entradas desse enum para ser considerado válido. Nesse campo não deve ser utilizado o _path_ da requisição original, uma vez que ao comparar com os valores dessa enum, ele não será considerado válido.

        Exemplo:

        1. Caso uma chamada à um endpoint com o **path** `/open-banking/credit-cards-accounts/v1/accounts/123456789/transactions` tenha sido feita, o valor a ser enviado no reporte é `/open-banking/credit-cards-accounts/v1/accounts/{creditCardAccountId}/transactions`, que é o identificador desse endpoint no enum. Nesse caso, o dado real da parte variável do _path_ não deverá ser enviado.
      type: string
      example: /open-banking/consents/v2/consents
      enum:
        - "/token"
        - "/register"
        - "/register/{clientId}"
        - "/introspection"
        - "/pushed-authorization-request"
        - "/revocation"
        - "/open-banking/accounts/v2/accounts"
        - "/open-banking/accounts/v2/accounts/{accountId}"
        - "/open-banking/accounts/v2/accounts/{accountId}/balances"
        - "/open-banking/accounts/v2/accounts/{accountId}/overdraft-limits"
        - "/open-banking/accounts/v2/accounts/{accountId}/transactions"
        - "/open-banking/accounts/v2/accounts/{accountId}/transactions-current"
        - "/open-banking/consents/v2/consents"
        - "/open-banking/consents/v2/consents/{consentId}"
        - "/open-banking/credit-cards-accounts/v2/accounts"
        - "/open-banking/credit-cards-accounts/v2/accounts/{creditCardAccountId}"
        - "/open-banking/credit-cards-accounts/v2/accounts/{creditCardAccountId}/bills"
        - "/open-banking/credit-cards-accounts/v2/accounts/{creditCardAccountId}/bills/{billId}/transactions"
        - "/open-banking/credit-cards-accounts/v2/accounts/{creditCardAccountId}/limits"
        - "/open-banking/credit-cards-accounts/v2/accounts/{creditCardAccountId}/transactions"
        - "/open-banking/credit-cards-accounts/v2/accounts/{creditCardAccountId}/transactions-current"
        - "/open-banking/customers/v2/business/financial-relations"
        - "/open-banking/customers/v2/business/identifications"
        - "/open-banking/customers/v2/business/qualifications"
        - "/open-banking/customers/v2/personal/financial-relations"
        - "/open-banking/customers/v2/personal/identifications"
        - "/open-banking/customers/v2/personal/qualifications"
        - "/open-banking/financings/v2/contracts"
        - "/open-banking/financings/v2/contracts/{contractId}"
        - "/open-banking/financings/v2/contracts/{contractId}/payments"
        - "/open-banking/financings/v2/contracts/{contractId}/scheduled-instalments"
        - "/open-banking/financings/v2/contracts/{contractId}/warranties"
        - "/open-banking/invoice-financings/v2/contracts"
        - "/open-banking/invoice-financings/v2/contracts/{contractId}"
        - "/open-banking/invoice-financings/v2/contracts/{contractId}/payments"
        - "/open-banking/invoice-financings/v2/contracts/{contractId}/scheduled-instalments"
        - "/open-banking/invoice-financings/v2/contracts/{contractId}/warranties"
        - "/open-banking/loans/v2/contracts"
        - "/open-banking/loans/v2/contracts/{contractId}"
        - "/open-banking/loans/v2/contracts/{contractId}/payments"
        - "/open-banking/loans/v2/contracts/{contractId}/scheduled-instalments"
        - "/open-banking/loans/v2/contracts/{contractId}/warranties"
        - "/open-banking/payments/v1/consents"
        - "/open-banking/payments/v1/consents/{consentId}"
        - "/open-banking/payments/v1/pix/payments"
        - "/open-banking/payments/v1/pix/payments/{paymentId}"
        - "/open-banking/payments/v2/consents"
        - "/open-banking/payments/v2/consents/{consentId}"
        - "/open-banking/payments/v2/pix/payments"
        - "/open-banking/payments/v2/pix/payments/{paymentId}"
        - "/open-banking/resources/v2/resources"
        - "/open-banking/unarranged-accounts-overdraft/v2/contracts"
        - "/open-banking/unarranged-accounts-overdraft/v2/contracts/{contractId}"
        - "/open-banking/unarranged-accounts-overdraft/v2/contracts/{contractId}/payments"
        - "/open-banking/unarranged-accounts-overdraft/v2/contracts/{contractId}/scheduled-instalments"
        - "/open-banking/unarranged-accounts-overdraft/v2/contracts/{contractId}/warranties"
        - "/open-banking/payments/v3/consents"
        - "/open-banking/payments/v3/consents/{consentId}"
        - "/open-banking/payments/v3/pix/payments"
        - "/open-banking/payments/v3/pix/payments/{paymentId}"

    OpendataReportEndpoints:
      description: |
        Identificação do endpoint que foi utilizado na chamada da api de dados abertos. A identificação do endpoint deve estar entre as entradas desse enum para ser considerado válido.
      type: string
      example: "/open-banking/channels/v1/electronic-channels"
      enum:
        - "/open-banking/products-services/v1/personal-accounts"
        - "/open-banking/products-services/v1/business-accounts"
        - "/open-banking/products-services/v1/personal-loans"
        - "/open-banking/products-services/v1/business-loans"
        - "/open-banking/products-services/v1/personal-financings"
        - "/open-banking/products-services/v1/business-financings"
        - "/open-banking/products-services/v1/personal-invoice-financings"
        - "/open-banking/products-services/v1/business-invoice-financings"
        - "/open-banking/products-services/v1/personal-credit-cards"
        - "/open-banking/products-services/v1/business-credit-cards"
        - "/open-banking/products-services/v1/personal-unarranged-account-overdraft"
        - "/open-banking/products-services/v1/business-unarranged-account-overdraft"
        - "/open-banking/channels/v1/branches"
        - "/open-banking/channels/v1/electronic-channels"
        - "/open-banking/channels/v1/phone-channels"
        - "/open-banking/channels/v1/banking-agents"
        - "/open-banking/channels/v1/shared-automated-teller-machines"
        - "/open-banking/capitalization-bonds/v1/bonds"
        - "/open-banking/investments/v1/funds"
        - "/open-banking/exchange/v1/online-rates"
        - "/open-banking/exchange/v1/vet-values"
        - "/open-banking/acquiring-services/v1/personals"
        - "/open-banking/acquiring-services/v1/businesses"
        - "/open-banking/pension/v1/risk-coverages"
        - "/open-banking/insurance/v1/automotives"
        - "/open-banking/insurance/v1/homes"
        - "/open-banking/insurance/v1/personals"

    AdditionalInfo:
      description: Informações adicionais sobre o reporte deste endpoint/método. Possui característica variável. As regras de preenchimento estão na documentação funcional em https://openfinancebrasil.atlassian.net/wiki/spaces/OF/pages/37879861/Reporte#additionalInfo. Atenção especial na tabela Excel com a listagem de endpoints em https://openfinancebrasil.atlassian.net/wiki/download/attachments/37879861/Tabela%20additionalInfo%20%E2%80%93%20campos%20contexto%20e%20obrigatoriedade%20(cliente%20server).xlsx?api=v2.
      type: object

      properties:
        consentId:
          description: Deve ser preenchido com a mesma string obtida no campo `.data.consentId` retornado após a chamada inicial na API "POST /consent". *Ao reportar o uso de um endpoint /token, o identificador único de consentimento só será reportado nos casos em que "grant_type" é do tipo "authorization_code" ou do tipo "refresh_token", uma vez que esta informação de consentId é inexistente quando "grant_type" é do tipo
          type: string
        personType:
          description: Deve ser preenchida baseado no tipo de pessoa responsável pelo consentimento. Deverá ser obserdado se `.data.businessEntity` estiver preenchido no payload, se estiver então preencher com "PJ", se não estiver então preencher com "PF"
          type: string
        localInstrument:
          description: Deve ser preenchido com a mesma string informada no payload ".data.localInstrument"
          type: string
        status:
          description: Deve ser preenchido com a mesma string obtida no ".data.status"
          type: string
        clientIp:
          description: Deve ser preenchido com o Endereço IPv4 ou IPv6 do client que fez a requisição
          type: string
        rejectReason:
          description: Deve ser preenchido com a mesma string obtida no ".data.rejectionReason.code"
          type: string
        errorCodes:
          description: Caso o HTTP Code seja 4XX ou 5XX, esse campo deve ser preenchido com a lista das strings obtidas em ".errors[].code" . Não havendo string, deve ser enviada uma lista vazia.
          type: string
        webhookEnable:
          description: Deve ser preenchido com o valor booleano TRUE caso haja pelo menos um item indicado na lista do campo ".webhook_uris" no payload, caso contrário deverá ser preenchido com o valor booleano FALSE
          type: string
        webhookInteractionId:
          description: Caso o GET esteja sendo feito após o estímulo do webhook, o x-webhook-interaction-id deverá ser indicado
          type: string
        enrollmentId:
          description: Deve ser preenchido com a mesma string obtida no campo `.data.enrollmentId` retornado após a chamada inicial na API "POST /enrollments". *Ao reportar o uso de um endpoint /token, o identificador único de consentimento só será reportado nos casos em que "grant_type" é do tipo "authorization_code" ou do tipo "refresh_token", uma vez que esta informação de enrollmentId é inexistente quando "grant_type" é do tipo "client_credentials".
          type: string
        authenticatorAttachment:
          description: Deve ser preenchido com a mesma string definida em ".data.authenticatorAttachment".  Não havendo string, deve ser explicitamente enviada esse additionalInfo como sendo uma string vazia.
          type: string
        platform:
          description: Deve ser preenchido com a mesma string definida em ".data.platform"
          type: string
        rp:
          description: Deve ser preenchido com a mesma string definida em ".data.rp"
          type: string
        rejectionReasonCode:
          description: Deve ser preenchido com a mesma string obtida no ".data.rejectionReason.code"
          type: string
        rejectionReasonDetail:
          description: Deve ser preenchido com a mesma string obtida no ".data.rejectionReason.detail"
          type: string
        authorisationFlow:
          description: Deve ser preenchido com a mesma string obtida no ".data.authorisationFlow"
          type: string
        dropReason:
          description: |
            1. O campo dropReason deve ser adicionado nas informações do campo additionalInfo que deverá ser enviado no reporte do provedor do serviço consumido (papel SERVER)
            2. O campo deve ser preenchido como “NO_CREDENTIAL" caso o CPF/CNPJ não seja cliente ou “NONE” caso contrário.
            3. Neste contexto define-se como cliente o CPF/CNPJ que possui credencial autenticadora para prosseguir no fluxo monitorado.
            4. O reporte deverá ser feito por todos os transmissores de dados e detentoras de conta.
            5. Para o caso em que o operador não possui poder, após autenticação dele e desambiguação de quem está operando, o reporte deve ser realizado com "NO_CREDENTIAL".
          type: string
        paymentType:
          description: |
            Identifica o modo de pagamento acionado no consentimento
            1. Envio obrigatório para a role Client​
            2. Conteudo ENUM do novo campo varia de acordo com o endpoint conforme tabela abaixo

            | Endpoint | Valores possíveis |
            |----------|-------------|
            | <br>POST /open-banking/payments/v4/consents&nbsp;&nbsp;&nbsp;    |  <br>IMEDIATO<br>AGENDADO<br>RECORRENTE​
            |----------|-------------|
            | <br>POST /open-banking/payments/v4/pix/payments&nbsp;&nbsp;&nbsp;    |  <br>IMEDIATO<br>AGENDADO<br>RECORRENTE​
            |----------|-------------|
            | <br>PATCH /open-banking/payments/v4/pix/payments/{paymentId}​&nbsp;&nbsp;&nbsp;    |  <br>IMEDIATO<br>AGENDADO<br>RECORRENTE​
            |----------|-------------|
            | <br>POST /automatic-payments/v1/recurring-consents&nbsp;&nbsp;&nbsp;    |  <br>SWEEPING
            |----------|-------------|
            | <br>PATCH /automatic-payments/v1/recurring-consents/{consentId}&nbsp;&nbsp;&nbsp;    |  <br>SWEEPING
            |----------|-------------|
            | <br>POST /automatic-payments/v1/pix/recurring-payments&nbsp;&nbsp;&nbsp;    |  <br>SWEEPING
            |----------|-------------|
            | <br>PATCH /automatic-payments/v1/pix/recurring-payments/{paymentId}&nbsp;&nbsp;&nbsp;   |  <br>SWEEPING
            <br>
          type: string
          enum:
            - IMEDIATO: Pix sem configuração de agendamento​
            - AGENDADO: Pix com configuração de agendamento​
            - RECORRENTE: Pix sem configuração de agendamento e configuração de recorrência​
            - SWEEPING: para todas as chamadas de pagamentos inteligentes​

    OpendataAdditionalInfo:
      description: Informações adicionais sobre o reporte deste endpoint/método. Possui característica variável. As regras de preenchimento estão na documentação funcional em https://openfinancebrasil.atlassian.net/wiki/spaces/OF/pages/37879861/Reporte#additionalInfo. Atenção especial na tabela Excel com a listagem de endpoints em https://openfinancebrasil.atlassian.net/wiki/download/attachments/37879861/Tabela%20additionalInfo%20%E2%80%93%20campos%20contexto%20e%20obrigatoriedade%20(cliente%20server).xlsx?api=v2.
      type: object
      properties: {}

    GenericError:
      description: Representa uma resposta de erro genérica.
      type: object
      additionalProperties: false
      properties:
        message:
          type: string
          pattern: ^[- /:_.',0-9a-zA-Z]{0,200}$
          maxLength: 200

    EmptyObject:
      description: Representa um objeto sem propriedades previamente definidas
      type: object
      additionalProperties: false
      example: {}

  securitySchemes:
    PCMAccessToken:
      type: http
      scheme: bearer
      bearerFormat: JWT

  responses:
    Default401Unauthorized:
      description: Ocorre quando uma requisição não é autorizada pelo gateway, e acontece quando o token não é enviado ou está inválido.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/GenericError"
          examples:
            NotAuthorized:
              value:
                message: "Unauthorized"
    Default403Forbidden:
      description: Ocorre quando um cliente já previamente identificado (autenticado) não é autorizado a acessar um determinado recurso.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/GenericError"
          examples:
            Forbidden:
              value:
                message: "Forbidden"
    Default404NotFound:
      description: Ocorre quando o reporte referenciado nao existe na base de dados.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/GenericError"
          examples:
            Forbidden:
              value:
                message: "Not Found"
    Default406NotAcceptable:
      description: Ocorre quando um cliente espera uma resposta diferente de application/json usando o header `Accept`
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/GenericError"
          examples:
            NotAcceptable:
              value:
                message: "Content type not accepted"
    Default415UnsupportedMediaType:
      description: Ocorre quando uma requisição envia um Content Type diferente de application/json
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/GenericError"
          examples:
            NotAcceptable:
              value:
                message: "Unsupported Media Type"
    Default429TooManyRequests:
      description: Ocorre quando o servidor atinge o limite de requisições (atualmente, 300 req/s).
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/GenericError"
          examples:
            NotAcceptable:
              value:
                message: "Too Many Requests"
    Default500InternalServerError:
      description: É devolvido quando ocorre um erro não identificado no servidor
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/GenericError"
          examples:
            InternalServerError:
              value:
                message: "Internal Server Error"
